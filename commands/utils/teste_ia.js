const { SlashCommandBuilder, EmbedBuilder, PermissionFlagsBits } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('teste_ia')
        .setDescription('üß™ [ADMIN] Testa conex√£o com OpenRouter API')
        .setDefaultMemberPermissions(PermissionFlagsBits.Administrator),

    async execute(interaction) {
        await interaction.deferReply({ ephemeral: true });

        try {
            // Verificar se AI Service est√° dispon√≠vel
            if (!global.aiService) {
                return await interaction.editReply({
                    content: '‚ö†Ô∏è **Servi√ßo de IA n√£o inicializado**\n\n' +
                             '**Motivo:** OPENROUTE_KEY n√£o configurada no .env\n\n' +
                             '**Como configurar:**\n' +
                             '1. Obtenha chave em: https://openrouter.ai/\n' +
                             '2. Adicione `OPENROUTE_KEY=sk-or-v1-...` no .env\n' +
                             '3. Reinicie o bot'
                });
            }

            // Testar conex√£o
            console.log('üß™ [ADMIN] Testando conex√£o com OpenRouter...');
            const startTime = Date.now();
            const testResult = await global.aiService.testConnection();
            const responseTime = Date.now() - startTime;

            if (testResult.success) {
                const stats = global.aiService.getStats();
                
                const embed = new EmbedBuilder()
                    .setColor('#00FF00')
                    .setTitle('‚úÖ Teste de IA - Conex√£o OK')
                    .setDescription('Servi√ßo de IA est√° funcionando corretamente!')
                    .addFields(
                        {
                            name: 'üîó Status da Conex√£o',
                            value: '‚úÖ Conectado ao OpenRouter',
                            inline: false
                        },
                        {
                            name: 'ü§ñ Modelo de Teste',
                            value: `\`${testResult.model.split('/')[1]}\``,
                            inline: true
                        },
                        {
                            name: '‚è±Ô∏è Tempo de Resposta',
                            value: `${responseTime}ms`,
                            inline: true
                        },
                        {
                            name: 'üìä Estat√≠sticas de Uso',
                            value: `Total: ${stats.ai.totalRequests} requisi√ß√µes\n` +
                                   `Sucesso: ${stats.ai.successRate}\n` +
                                   `Tempo m√©dio: ${stats.ai.avgResponseTime}`,
                            inline: false
                        },
                        {
                            name: 'üéØ Como Usar',
                            value: '**Para conversar com IA:**\n' +
                                   '‚Ä¢ Mencione o bot: `@DACI oi, como vai?`\n' +
                                   '‚Ä¢ Responda mensagens dele\n\n' +
                                   '**Comandos admin:**\n' +
                                   '‚Ä¢ `/ia_stats` - Ver estat√≠sticas\n' +
                                   '‚Ä¢ `/ia_modelos` - Listar modelos',
                            inline: false
                        }
                    )
                    .setFooter({ text: 'A IA √© usada apenas em men√ß√µes e respostas, n√£o em comandos slash' })
                    .setTimestamp();

                await interaction.editReply({ embeds: [embed] });
            } else {
                const errorEmbed = new EmbedBuilder()
                    .setColor('#FF0000')
                    .setTitle('‚ùå Teste de IA - Conex√£o Falhou')
                    .setDescription('Erro ao conectar com OpenRouter')
                    .addFields(
                        {
                            name: '‚ùå Erro',
                            value: `\`\`\`${testResult.error}\`\`\``,
                            inline: false
                        },
                        {
                            name: 'üí° Poss√≠veis Solu√ß√µes',
                            value: '‚Ä¢ Verifique se OPENROUTE_KEY est√° correta\n' +
                                   '‚Ä¢ Confirme se a chave √© v√°lida em https://openrouter.ai/\n' +
                                   '‚Ä¢ Verifique conex√£o com internet\n' +
                                   '‚Ä¢ Veja se os modelos est√£o dispon√≠veis',
                            inline: false
                        }
                    )
                    .setTimestamp();

                await interaction.editReply({ embeds: [errorEmbed] });
            }

        } catch (error) {
            console.error('[ADMIN] Erro no comando teste_ia:', error);

            const errorEmbed = new EmbedBuilder()
                .setColor('#FF0000')
                .setTitle('‚ùå Erro no Teste de IA')
                .setDescription('Ocorreu um erro ao tentar testar a conex√£o.')
                .addFields(
                    {
                        name: 'Erro',
                        value: `\`\`\`${error.message}\`\`\``,
                        inline: false
                    }
                )
                .setTimestamp();

            await interaction.editReply({ embeds: [errorEmbed] });
        }
    }
};

