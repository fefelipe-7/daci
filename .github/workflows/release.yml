name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v2.1.0)'
        required: true
        type: string

jobs:
  validate:
    name: ✅ Validate Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
      
      - name: Run lint
        run: npm run lint
      
      - name: Security audit
        run: npm audit --audit-level=high

  create-release:
    name: 🚀 Create Release
    runs-on: ubuntu-latest
    needs: validate
    permissions:
      contents: write
    
    steps:
      - name: Checkout código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi
      
      - name: Generate changelog
        id: changelog
        run: |
          VERSION=${{ steps.version.outputs.version }}
          
          # Pegar commits desde a última tag
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s (%h)" --no-merges)
          else
            COMMITS=$(git log ${LAST_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges)
          fi
          
          # Criar arquivo temporário com changelog
          cat > changelog.md << EOF
          ## 🎉 Release $VERSION
          
          ### 📝 Changes
          
          $COMMITS
          
          ### 🔗 Links
          
          - [Full Changelog](https://github.com/${{ github.repository }}/compare/${LAST_TAG}...${VERSION})
          - [Documentation](https://github.com/${{ github.repository }}/blob/${VERSION}/README.md)
          
          ### 📦 Installation
          
          \`\`\`bash
          git clone https://github.com/${{ github.repository }}.git
          cd daci
          git checkout $VERSION
          npm install
          \`\`\`
          EOF
          
          echo "Generated changelog for $VERSION"
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          body_path: changelog.md
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-production:
    name: 🌐 Deploy to Production
    runs-on: ubuntu-latest
    needs: create-release
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Trigger Render deployment
        run: |
          echo "🚀 Deployment will be triggered automatically by Render"
          echo "Monitor at: https://dashboard.render.com"
      
      - name: Deployment notification
        run: |
          echo "# 🌐 Deployment Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Release created successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔄 Render will automatically deploy this release" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📊 Monitor deployment at [Render Dashboard](https://dashboard.render.com)" >> $GITHUB_STEP_SUMMARY

