name: CI - Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch: # Permite execu√ß√£o manual

jobs:
  lint:
    name: üîç Lint & Format Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      
      - name: Instalar depend√™ncias
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint
        continue-on-error: true
      
      - name: Check Prettier formatting
        run: npm run format:check
        continue-on-error: true

  test:
    name: üß™ Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Instalar depend√™ncias
        run: npm ci
      
      - name: Run unit tests
        run: npm run test:unit
        env:
          NODE_ENV: test
      
      - name: Run integration tests
        run: npm run test:integration
        continue-on-error: true # Integration tests podem falhar sem APIs externas
        env:
          NODE_ENV: test
      
      - name: Generate coverage report
        run: npm run test:coverage
        if: matrix.node-version == '22.x'
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: matrix.node-version == '22.x'
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-daci-bot
          fail_ci_if_error: false

  build:
    name: üèóÔ∏è Build Check
    runs-on: ubuntu-latest
    needs: [lint, test]
    
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      
      - name: Instalar depend√™ncias
        run: npm ci
      
      - name: Run build
        run: npm run build
      
      - name: Verify bot can start
        run: |
          timeout 30s npm start || code=$?
          if [ $code -eq 124 ] || [ $code -eq 143 ]; then
            echo "‚úÖ Bot started successfully (timeout expected)"
            exit 0
          elif [ -z "$code" ]; then
            echo "‚úÖ Bot started and stopped cleanly"
            exit 0
          else
            echo "‚ùå Bot failed to start with code $code"
            exit 1
          fi
        env:
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN || 'test_token' }}
          OPENROUTE_KEY: ${{ secrets.OPENROUTE_KEY || 'test_key' }}
          CLIENT_ID: ${{ secrets.CLIENT_ID || '123456789' }}
          NODE_ENV: test

  status-check:
    name: ‚úÖ Status Check
    runs-on: ubuntu-latest
    needs: [lint, test, build]
    if: always()
    
    steps:
      - name: Check all jobs status
        run: |
          if [ "${{ needs.lint.result }}" = "failure" ] || \
             [ "${{ needs.test.result }}" = "failure" ] || \
             [ "${{ needs.build.result }}" = "failure" ]; then
            echo "‚ùå CI pipeline failed"
            exit 1
          else
            echo "‚úÖ All checks passed!"
            exit 0
          fi

